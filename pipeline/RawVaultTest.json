{
	"name": "RawVaultTest",
	"properties": {
		"activities": [
			{
				"name": "GetRawTables",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "SELECT DISTINCT TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS \nWHERE TABLE_SCHEMA='raw'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "data_vault_db",
						"type": "DatasetReference",
						"parameters": {
							"TABLE_NAME": "INFORMATION_SCHEMA.COLUMNS",
							"SCHEMA_NAME": "dbo",
							"dw_db_name": {
								"value": "@pipeline().globalParameters.dw_db_name",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetRawTables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetRawTables').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "VaultTestNotebook",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "@concat(if(equals(pipeline().globalParameters.environment,'dev'),'/Repos/caelum/lowell.caelum.cdp.databricks/','/caelum/'),'automation-testing/test_vault')\n",
									"type": "Expression"
								},
								"baseParameters": {
									"table_name": {
										"value": "@item().TABLE_NAME",
										"type": "Expression"
									},
									"run_id": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"zone": "raw"
								}
							},
							"linkedServiceName": {
								"referenceName": "databricks_cs",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "Testing_Pipelines/VaultTest"
		},
		"annotations": []
	}
}